package solution_test

import (
	"day16/solution"
	"fmt"
	"testing"
)

func TestReindeerMaze(t *testing.T) {
	testCases := []struct {
		input  [][]rune
		output int
	}{
		{
			[][]rune{
				[]rune("#############"),
				[]rune("#S.........E#"),
				[]rune("#############"),
			}, 10,
		},
		{
			[][]rune{
				[]rune("###"),
				[]rune("#E#"),
				[]rune("#.#"),
				[]rune("#.#"),
				[]rune("#.#"),
				[]rune("#.#"),
				[]rune("#.#"),
				[]rune("#S#"),
				[]rune("###"),
			}, 1006,
		},
		{
			[][]rune{
				[]rune("###########"),
				[]rune("#........E#"),
				[]rune("#.#######.#"),
				[]rune("#.#.....#.#"),
				[]rune("#.#.....#.#"),
				[]rune("#.#.....#.#"),
				[]rune("#.#######.#"),
				[]rune("#S........#"),
				[]rune("###########"),
			}, 1014,
		},
		{
			[][]rune{
				[]rune("###########"),
				[]rune("#........E#"),
				[]rune("#.#######.#"),
				[]rune("#.#######.#"),
				[]rune("#....####.#"),
				[]rune("#.##.####.#"),
				[]rune("#.##.####.#"),
				[]rune("#S........#"),
				[]rune("###########"),
			}, 1014,
		},
		{
			[][]rune{
				[]rune("###############"),
				[]rune("#.......#....E#"),
				[]rune("#.#.###.#.###.#"),
				[]rune("#.....#.#...#.#"),
				[]rune("#.###.#####.#.#"),
				[]rune("#.#.#.......#.#"),
				[]rune("#.#.#####.###.#"),
				[]rune("#...........#.#"),
				[]rune("###.#.#####.#.#"),
				[]rune("#...#.....#.#.#"),
				[]rune("#.#.#.###.#.#.#"),
				[]rune("#.....#...#.#.#"),
				[]rune("#.###.#.#.#.#.#"),
				[]rune("#S..#.....#...#"),
				[]rune("###############"),
			}, 7036, // sample test 1
		},
		{
			[][]rune{
				[]rune("#################"),
				[]rune("#...#...#...#..E#"),
				[]rune("#.#.#.#.#.#.#.#.#"),
				[]rune("#.#.#.#...#...#.#"),
				[]rune("#.#.#.#.###.#.#.#"),
				[]rune("#...#.#.#.....#.#"),
				[]rune("#.#.#.#.#.#####.#"),
				[]rune("#.#...#.#.#.....#"),
				[]rune("#.#.#####.#.###.#"),
				[]rune("#.#.#.......#...#"),
				[]rune("#.#.###.#####.###"),
				[]rune("#.#.#...#.....#.#"),
				[]rune("#.#.#.#####.###.#"),
				[]rune("#.#.#.........#.#"),
				[]rune("#.#.#.#########.#"),
				[]rune("#S#.............#"),
				[]rune("#################"),
			}, 11048, // sample test 1
		},
	}

	for idx, tc := range testCases {
		t.Run(fmt.Sprintf("Test case %d", idx), func(t *testing.T) {
			res := solution.ReindeerMaze(tc.input)
			if res != tc.output {
				t.Errorf("Expected %d, got %d", tc.output, res)
			}
		})
	}

}

func TestSeatFinder(t *testing.T) {
	testCases := []struct {
		input  [][]rune
		output int
	}{
		{
			[][]rune{
				[]rune("#############"),
				[]rune("#S.........E#"),
				[]rune("#############"),
			}, 11,
		},
		{
			[][]rune{
				[]rune("###"),
				[]rune("#E#"),
				[]rune("#.#"),
				[]rune("#.#"),
				[]rune("#.#"),
				[]rune("#.#"),
				[]rune("#.#"),
				[]rune("#S#"),
				[]rune("###"),
			}, 7,
		},
		{
			[][]rune{
				[]rune("###########"),
				[]rune("#........E#"),
				[]rune("#.#######.#"),
				[]rune("#.#.....#.#"),
				[]rune("#.#.....#.#"),
				[]rune("#.#.....#.#"),
				[]rune("#.#######.#"),
				[]rune("#S........#"),
				[]rune("###########"),
			}, 15,
		},
		{
			[][]rune{
				[]rune("###########"),
				[]rune("#........E#"),
				[]rune("#.#######.#"),
				[]rune("#.#######.#"),
				[]rune("#....####.#"),
				[]rune("#.##.####.#"),
				[]rune("#.##.####.#"),
				[]rune("#S........#"),
				[]rune("###########"),
			}, 15,
		},
		{
			[][]rune{
				[]rune("###############"),
				[]rune("#.......#....E#"),
				[]rune("#.#.###.#.###.#"),
				[]rune("#.....#.#...#.#"),
				[]rune("#.###.#####.#.#"),
				[]rune("#.#.#.......#.#"),
				[]rune("#.#.#####.###.#"),
				[]rune("#...........#.#"),
				[]rune("###.#.#####.#.#"),
				[]rune("#...#.....#.#.#"),
				[]rune("#.#.#.###.#.#.#"),
				[]rune("#.....#...#.#.#"),
				[]rune("#.###.#.#.#.#.#"),
				[]rune("#S..#.....#...#"),
				[]rune("###############"),
			}, 45, // sample test 1
		},
		{
			[][]rune{
				[]rune("#################"),
				[]rune("#...#...#...#..E#"),
				[]rune("#.#.#.#.#.#.#.#.#"),
				[]rune("#.#.#.#...#...#.#"),
				[]rune("#.#.#.#.###.#.#.#"),
				[]rune("#...#.#.#.....#.#"),
				[]rune("#.#.#.#.#.#####.#"),
				[]rune("#.#...#.#.#.....#"),
				[]rune("#.#.#####.#.###.#"),
				[]rune("#.#.#.......#...#"),
				[]rune("#.#.###.#####.###"),
				[]rune("#.#.#...#.....#.#"),
				[]rune("#.#.#.#####.###.#"),
				[]rune("#.#.#.........#.#"),
				[]rune("#.#.#.#########.#"),
				[]rune("#S#.............#"),
				[]rune("#################"),
			}, 64, // sample test 1
		},
	}

	for idx, tc := range testCases {
		t.Run(fmt.Sprintf("Test case %d", idx), func(t *testing.T) {
			res := solution.SeatFinder(tc.input)
			if res != tc.output {
				t.Errorf("Expected %d, got %d", tc.output, res)
			}
		})
	}

}
